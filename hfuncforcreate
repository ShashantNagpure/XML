package com.proj.xmlLayer;

import java.util.TreeMap;

import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Component;
import org.w3c.dom.Element;
import org.w3c.dom.NamedNodeMap;
import org.w3c.dom.Node;

import com.proj.Pojos.TreeNode;
@Component
@Scope("prototype")
public class HelperFuncsForCreating {
	public void add(TreeNode n,Node root,String pth,TreeMap<String,Integer>t)
	{
		String s=pth.concat(root.getNodeName());
		n.setPath(s);
		if(root.getNodeType()==2) {n.setVal(root.getNodeName());}
		if(root.getNodeType()==1)
		{
			n.setVal(root.getNodeName());
			if(t.containsKey(root.getNodeName())==true)
			{
				Integer r=t.get(root.getNodeName());
				r=r+1;
				t.replace(root.getNodeName(), r);
				s=s.concat("[");
				s=s.concat(String.valueOf(r));
				s=s.concat("]");
				n.setPath(s);	
				
			}
			else
			{
				t.put(root.getNodeName(), 1);
			}
		}

		if(root.getNodeType()==2)
		{
			n.list.add(new TreeNode(root.getNodeValue(),s));
			n.list.get(0).setIsAtt(true);
		}
		if(root.getNodeType()==1)
		{
			String att=s.concat("/@");
			NamedNodeMap mp=root.getAttributes();
			int cnt=-1;
			if(mp.getLength()!=0) {
				cnt++;
			n.list.add(new TreeNode("Attributes"));
			for(int i=0;i<mp.getLength();i++)
			{
				n.list.get(0).list.add(new TreeNode());
				add(n.list.get(0).list.get(i),mp.item(i),att,null);
				
			}
			}
			Element el=(Element) root;
			TreeMap<String, Integer>dups =new TreeMap<>();
			for(int i=0;i<el.getChildNodes().getLength();i++)
			{
	
				if(el.getChildNodes().item(i).getNodeType()==1)
				{
					
					cnt++;
					n.list.add(new TreeNode());
					add(n.list.get(cnt),el.getChildNodes().item(i),s.concat("/"),dups);
				}
			}
		}
		if(root.getNodeType()==1&&root.getChildNodes().getLength()==1) 
		{
			//n.list.add(new TreeNode(root.getChildNodes().item(0).getNodeValue(),n.getPath()));
			n.setIsFinal(true);
		}
		
	}
	public void print(TreeNode root)
	{
		System.out.println(root.getVal()+" "+root.getPath());
		for(TreeNode t:root.list)
		{
			print(t);
		}
	}
	

}
